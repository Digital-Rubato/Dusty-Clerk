"""
# Directions and Next Ups

With Gui add:

Fix the styling for the barcode section(don't work) ->
change layout -> 
add visible data window->
add remove / delete button ->

done:

Add second input detailing the item ->
Second input to same dict ->
add enter/return button functionality instead of pressing ok->
save and export feature->
pressing ok or enter clears and saves the item description input line ->
added menu bar and drop down menu ->
added save safety net ->


Excel styling:

Expand columns and rows ->
Style them ->
Add head liner description ->


""" 

""" Current Issues: 

did my code actually add barcode font styling??? Surprise it dont.
wont add item description???????????????(WHAT MENU DROP IS A VALUE?!?!?!?!?!)

"""

import pandas as pd

from pandas.io.formats.style import Styler

import os

from openpyxl import load_workbook

import PySimpleGUI as sg

""" Data Space """

bc_style = []

transfer = []

item = []

cl = {}

pathname = ""
""" Gui Logic """
#Drop Down Menu
menu_drop = [
	['File',['Save', 'Exit']],
	['About']
	]

#save catch menu
save_layout = [
		[sg.Text('Would you like to save before quitting?')],
		[sg.Button('Yes'), sg.Button('No')]
		]

#layout window

layout = [
	[sg.Menu(menu_drop)],
	[sg.Text('Dusty Clerk')],
	[sg.Text('Enter your barcode'), sg.InputText(do_not_clear=False)],
	[sg.Text('Item Details'), sg.InputText()],
	[sg.Button('Add'), sg.Button('Save', key='Save'), sg.Button('Exit')],
#adds invisible submit on enter press
	[sg.Button('Submit', visible=False, bind_return_key=True)]
	]

#Window Initialization
window = sg.Window('Dusty Clerk', layout, element_justification='c')

#save layout window

#While loop to process 'events' and recieve values of the inputs

while True:
	event, values = window.read()
	
	if event == sg.WIN_CLOSED or event == 'Exit':
		if pathname == "":

			save_window = sg.Window('Would you like to save?', save_layout, element_justification = 'c')
			event, values = save_window.read()

			if event == 'Yes':
				foldername = sg.PopupGetFolder('', no_window=True)
				filename = sg.PopupGetFile('Please enter a file name for your results')
				pathname = os.path.join(foldername, filename + '.xlsx')
				f = open(pathname, 'w')
				f.close()
				break
			else:
				break
		if pathname != "":
			break

	if event == 'Save':
		foldername = sg.PopupGetFolder('', no_window=True)
		filename = sg.PopupGetFile('Please enter a file name for your results')
		pathname = os.path.join(foldername ,filename + '.xlsx')
				
		f = open(pathname, 'w')
		f.close()

	if event == 'Add' or event == 'Submit':
		transfer.append(values[1])
		bc_style.append(f'*{values[1]}*')
		item.append(values[2])
		print(transfer)
		print(item)
	
window.close()

#add transfered values to dict

cl['Product ID'] = transfer
cl['Barcode'] = bc_style
cl['Item Description'] = item

""" Main Excel Logic """

#writing to demo.xslx and using xlsxwriter 'engine'
writer = pd.ExcelWriter(pathname, engine='xlsxwriter')

print("saving to: ",pathname)

#dataframe name and age columns
df = pd.DataFrame(cl)
print("Data Added to: ", pathname)

#styling DataFrame
print("styling dataframe")

def barcode_font(x):

	df = x.copy()

	df[['Barcode']] = 'font-family: Free 3 of 9'
	df.style.set_properties(**{'font-family': 'Free 3 of 9'}).render
	
	return df

df.style.set_properties(**{'font-family': 'Free 3 of 9'}).render

print("style complete")

#convert DataFrame to excel object
print("Inputting bulk data")

df.to_excel(writer, sheet_name='Sheet1', index=False)

#Saving and writing data
print("Saving")

writer.save()

print("Save Complete")

#read the data to check

print("Playback enabled")

reader = pd.read_excel(pathname)

print(reader)
print("Playback complete")