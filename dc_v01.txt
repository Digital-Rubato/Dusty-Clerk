"""
# Directions and Next Ups

With Gui add:

done?:
add barcode font styling

done:
Add second input detailing the item ->
Second input to same dict ->

Sprucing:
pressing ok clears and saves the barcode input line ->
add enter/return button functionality instead of pressing ok->
add visible data window->
add remove / delete button ->

Excel styling:

Expand columns and rows ->
Style them
""" 

""" Current Issues: 

None

"""

import pandas as pd

from pandas.io.formats.style import Styler

from openpyxl import load_workbook

import PySimpleGUI as sg



""" Data Space """

bc_style = []

transfer = []

item = []

cl = {}

""" Input Logic 


b_code = input("Input your barcode: ")

bc_list.append(b_code)

t_code = input("Second barcode: ")

bc_list.append(t_code)

# add bc_list as values to dict: table and key: 'p_id'
table['Product ID'] = bc_list

print("Inputs complete. Assembling table.")
print(table)
"""

""" Gui Logic """
#Variable Space

#layout window

layout = [
	[sg.Text('Dusty Clerk')],
	[sg.Text('Enter your barcode'), sg.InputText()],
	[sg.Text('Item Details'), sg.InputText()],
	[sg.Button('OK'), sg.Button('Quit')]
	]


#Window Initialization
window = sg.Window('Dusty Clerk', layout)

#While loop to process 'events' and recieve values of the inputs

while True:
	event, values = window.read()
	if event == sg.WIN_CLOSED or event == 'Quit': 
		break
	transfer.append(values[0])
	bc_style.append(f'*{values[0]}*')
	item.append(values[1])
	print(transfer)
	print(item)

window.close()


#add transfered values to dict

cl['Product ID'] = transfer
cl['Barcode'] = bc_style
cl['Item Description'] = item

""" Main Excel Logic """

#writing to demo.xslx and using xlsxwriter 'engine'
writer = pd.ExcelWriter('demo.xlsx', engine='xlsxwriter')

print("Adding bulk data")

#dataframe name and age columns
df = pd.DataFrame(cl)
print("Bulk Data Added")

#styling DataFrame
print("styling dataframe")
def barcode_font(x):

	df = x.copy()

	df[['Barcode']] = 'font-family: Free 3 of 9'
	
	return df
df.style.apply(barcode_font, axis = None)

print("style finished")

#convert DataFrame to excel object
print("Inputting bulk data")

df.to_excel(writer, sheet_name='Sheet1', index=False)

#Saving and writing data
print("Saving")

writer.save()

print("Save Complete")

#read the data to check

print("Playback enabled")

reader = pd.read_excel(r'demo.xlsx')

print(reader)
print("Playback complete")